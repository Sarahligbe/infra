---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.statefulset.name }}-scripts
  namespace: {{ .Values.statefulset.name }}
data:
  init.sh: |
    #!/bin/bash

    set -e

    start() {
      MONIKER=unchained \
      CHAIN_JSON=https://raw.githubusercontent.com/cosmos/chain-registry/master/cosmoshub/chain.json \
      P2P_POLKACHU=true \
      run.sh gaiad start \
        --rpc.laddr tcp://0.0.0.0:26657 \
        --minimum-gas-prices 0uatom &
      PID="$!"
    }

    stop() {
      echo "Catching signal and sending to PID: $PID" && kill $PID
      while $(kill -0 $PID 2>/dev/null); do sleep 1; done
    }

    trap 'stop' TERM INT
    start
    wait $PID
  readiness.sh: |
    #!/bin/bash

    DISABLE_READINESS_PROBE=/root/disable_readiness

    if [[ -f "$DISABLE_READINESS_PROBE" ]]; then
      echo "readiness probe disabled"
      exit 0
    fi

    source /tendermint.sh

    BLOCK_HEIGHT_TOLERANCE=5

    SYNCING=$(curl -sf http://localhost:1317/syncing) || exit 1
    NET_INFO=$(curl -sf http://localhost:26657/net_info) || exit 1
    STATUS=$(curl -sf http://localhost:26657/status) || exit 1

    IS_SYNCING=$(echo $SYNCING | jq -r '.syncing')
    CATCHING_UP=$(echo $STATUS | jq -r '.result.sync_info.catching_up')
    NUM_PEERS=$(echo $NET_INFO | jq -r '.result.n_peers')

    if [[ $IS_SYNCING == false && $CATCHING_UP == false ]]; then
      if (( $NUM_PEERS > 0 )); then
        latest_block_height=$(echo $STATUS | jq -r '.result.sync_info.latest_block_height')
        best_reference_block_height=$(get_best_reference_block_height https://cosmos-rpc.polkachu.com https://rpc-cosmoshub.keplr.app)

        # if node is reporting synced, double check against reference nodes
        reference_validation $latest_block_height $best_reference_block_height $BLOCK_HEIGHT_TOLERANCE

        echo "daemon is synced with $NUM_PEERS peers"
        exit 0
      fi

      echo "daemon is synced, but has no peers"
      exit 1
    fi

    echo "daemon is still syncing"
    exit 1
  liveness.sh: |
    #!/bin/bash

    DISABLE_LIVENESS_PROBE=/root/disable_liveness

    if [[ -f "$DISABLE_LIVENESS_PROBE" ]]; then
      echo "liveness probe disabled"
      exit 0
    fi

    FILE=/root/.latest_block_height

    STATUS=$(curl -sf http://localhost:26657/status) || exit 1

    LATEST_BLOCK_HEIGHT=$(echo $STATUS | jq -r '.result.sync_info.latest_block_height')

    if [[ ! -f "$FILE" ]]; then
      echo $LATEST_BLOCK_HEIGHT > $FILE
      exit 1
    fi

    PREVIOUS_BLOCK_HEIGHT=$(cat $FILE)
    echo $LATEST_BLOCK_HEIGHT > $FILE

    if (( $LATEST_BLOCK_HEIGHT > $PREVIOUS_BLOCK_HEIGHT )); then
      echo "daemon is running"
      exit 0
    fi

    echo "daemon is stalled"
    exit 1
  startup.sh: |
    #!/bin/bash

    DISABLE_STARTUP_PROBE=/root/disable_startup

    if [[ -f "$DISABLE_STARTUP_PROBE" ]]; then
      echo "startup probe disabled"
      exit 0
    fi

    curl -sf http://localhost:26657/status && exit 0 || exit 1
  tendermint.sh: |
    #!/bin/bash

    get_best_reference_block_height() {
      local best_reference_block_height=0

      for reference_url in "$@"; do
        local status=$(curl -sf $reference_url/status)

        if [[ $status != "" ]]; then
          local latest_block_height=$(echo $status | jq -r '.result.sync_info.latest_block_height')

          if (( $latest_block_height > $best_reference_block_height )); then
            best_reference_block_height=$latest_block_height
          fi
        fi
      done

      echo $best_reference_block_height
    }

    reference_validation() {
      local latest_block_height=$1
      local best_reference_block_height=$2
      local block_height_tolerance=$3

      if (( $best_reference_block_height > 0 )); then
        local nominal_block_height=$(( $best_reference_block_height - $block_height_tolerance ))

        if (( $latest_block_height >= $nominal_block_height )); then
          echo "daemon is synced and within block height tolerance of reference node"
          exit 0
        fi

        echo "daemon is synced, but not within block height tolerance of reference node"
        exit 1
      fi
    }