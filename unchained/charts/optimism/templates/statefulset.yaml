---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.name }}
  labels: 
    app: {{ .Values.name }}
    asset: {{ .Values.name }}
    tier: 'statefulset'
spec:
  serviceName: {{ .Values.name }}-svc
  replicas: {{ .Values.statefulset.replicas }}
  selector:
    matchLabels:   
      app: {{ .Values.name }}
      asset: {{ .Values.name }}
      tier: 'statefulset'
  podManagementPolicy: 'Parallel'
  updateStrategy:
    type: 'RollingUpdate'
  template:
    metadata:
      namespace: {{ .Values.name }}
      labels:
        app: {{ .Values.name }}
        asset: {{ .Values.name }}
        tier: 'statefulset'
    spec:
      containers: 
        {{- range .Values.statefulset.containers }}
        name: {{ .name }}
        image: {{ .image }}
        {{- with .env }}
        env: 
          {{- toYaml . | nindent 2 }}
        {{- end }}
        {{-with .ports }}
        ports: 
          {{- toYaml . | nindent 2 }}
        {{- end }}
        {{- with .limits }}
        limits:
          {{- toYaml . | nindent 2 }}
        {{- end }}
        {{- with .requests }}
        requests:
          {{- toYaml . | nindent 2 }}
        {{- end }}
        {{- if or (eq .name 'daemon') (eq .name 'op-node')}}
        command: '/init.sh' 
        startupProbe:
          failureThreshold: 60
          periodSeconds: 30
          timeoutSeconds: 10 
          exec:
            command: 
            - /startup.sh
        livenessProbe:
          failureThreshold: 5
          periodSeconds: 30
          timeoutSeconds: 10
          exec:
            command: 
            - /liveness.sh
        {{- end }}
        readinessProbe:
          failureThreshold: 10
          periodSeconds: 30
          timeoutSeconds: 10
          exec:
            command: 
            - /readiness.sh
        volumeMounts:
        {{- if or (eq .name 'daemon') (eq .name 'op-node')}}
        - name: data-{{ .Values.name }}
          mountPath: {{ default "/data" .dataDir }}
        - name: {{ .name }}
          mountPath: '/init.sh'
          subPath: {{ .name }}-init.sh
        - name: {{ .name }}
          mountPath: '/startup.sh'
          subPath: {{ .name }}-startup.sh
        - name: {{ .name }}
          mountPath: '/liveness.sh'
          subPath: {{ .name }}-liveness.sh
          mountPath: '/jwt.hex'
          subPath: 'jwt.hex'
        - name: {{ .name }}
          mountPath: '/evm.sh'
          subPath: 'evm.sh'
        {{- end }}
        - name: {{ .name }}
          mountPath: '/readiness.sh'
          subPath: {{ .name }}-readiness.sh
        - name: {{ .name }}
        {{- if eq .name 'indexer' }}
        - name: {{ .name }}
          mountPath: '/indexer-config.json'
          subPath: 'indexer-config.json'
        {{ end }}
        {{ end }}
    terminationGracePeriodSeconds: 600
    volumes:
      - name: data
        persistentVolumeClaim:
          claimName:  
      - name: {{ .Values.name }}
        configMap:
          name: {{ .Values.name }}
          defaultMode: 0775
  volumeClaimTemplates:
  - metadata:
      name: 
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 