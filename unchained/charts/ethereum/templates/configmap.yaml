---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-scripts
  namespace: {{ .Chart.Name }}
data:
  daemon-init.sh: |
    #!/bin/sh

    set -e

    apk add bash curl jq

    start_coin_bg() {
      geth \
        --$NETWORK \
        --authrpc.jwtsecret /jwt.hex \
        --syncmode full \
        --datadir /data \
        --http \
        --http.addr 0.0.0.0 \
        --http.port 8545 \
        --http.api eth,net,web3,debug,txpool,engine \
        --http.vhosts '*' \
        --http.corsdomain '*' \
        --ws \
        --ws.addr 0.0.0.0 \
        --ws.port 8546 \
        --ws.api eth,net,web3,debug,txpool,engine \
        --ws.origins '*' \
        --txlookuplimit 0 \
        --cache 4096 \
        --ipcdisable \
        --nat none &
      PID="$!"
    }

    stop_coin() {
      echo "Catching signal and sending to PID: $PID"
      kill $PID
      while $(kill -0 $PID 2>/dev/null); do
        sleep 1
      done
    }

    start_coin_bg

    trap 'stop_coin' SIGTERM SIGINT
    wait $PID
  daemon-liveness.sh: |
    #!/bin/bash

    DISABLE_LIVENESS_PROBE=/data/disable_liveness

    if [[ -f "$DISABLE_LIVENESS_PROBE" ]]; then
      echo "liveness probe disabled"
      exit 0
    fi

    FILE=/data/.block_number

    ETH_BLOCK_NUMBER=$(curl -sf -d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' -H 'Content-Type: application/json' http://localhost:8545) || exit 1

    CURRENT_BLOCK_NUMBER_HEX=$(echo $ETH_BLOCK_NUMBER | jq -r '.result')
    CURRENT_BLOCK_NUMBER=$(($CURRENT_BLOCK_NUMBER_HEX))

    if [[ ! -f "$FILE" ]]; then
      echo $CURRENT_BLOCK_NUMBER > $FILE
      exit 1
    fi

    PREVIOUS_BLOCK_NUMBER=$(cat $FILE)
    echo $CURRENT_BLOCK_NUMBER > $FILE

    if (( $CURRENT_BLOCK_NUMBER > $PREVIOUS_BLOCK_NUMBER )); then
      echo "daemon is running"
      exit 0
    fi

    echo "daemon is stalled"
    exit 1
  daemon-readiness.sh: |
    #!/bin/bash

    DISABLE_READINESS_PROBE=/data/disable_readiness

    if [[ -f "$DISABLE_READINESS_PROBE" ]]; then
      echo "readiness probe disabled"
      exit 0
    fi

    source /evm.sh

    BLOCK_HEIGHT_TOLERANCE=5

    ETH_SYNCING=$(curl -sf -d '{"jsonrpc":"2.0","method":"eth_syncing","params":[],"id":1}' -H 'Content-Type: application/json' http://localhost:8545) || exit 1

    SYNCING=$(echo $ETH_SYNCING | jq -r '.result')

    if [[ $SYNCING == false ]]; then
      eth_blockNumber=$(curl -sf -d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' -H 'Content-Type: application/json' http://localhost:8545) || exit 1
      current_block_number_hex=$(echo $eth_blockNumber | jq -r '.result')
      current_block_number=$(($current_block_number_hex))

      best_reference_block_number=$(get_best_reference_block_number https://ethereum.publicnode.com https://eth-mainnet.g.alchemy.com/v2/demo https://rpc.ankr.com/eth)

      # if node is reporting synced, double check against reference nodes
      reference_validation daemon $current_block_number $best_reference_block_number $BLOCK_HEIGHT_TOLERANCE

      echo "daemon is synced"
      exit 0
    fi

    echo "daemon is still syncing"
    exit 1
  daemon-startup.sh: |
    #!/bin/bash

    DISABLE_STARTUP_PROBE=/data/disable_startup

    if [[ -f "$DISABLE_STARTUP_PROBE" ]]; then
      echo "startup probe disabled"
      exit 0
    fi

    NET_LISTENING=$(curl -sf -d '{"jsonrpc":"2.0","method":"net_listening","params":[],"id":1}' -H 'Content-Type: application/json' http://localhost:8545) || exit 1

    LISTENING=$(echo $NET_LISTENING | jq -r '.result')

    if [[ $LISTENING == true ]]; then
      echo "daemon is listening"
      exit 0
    fi

    echo "daemon is not listening"
    exit 1
  jwt.hex: |
    f6f8f87f9104df70e9503e918b210160121a8607a6692fa785508f5eb17441b4
  daemon-beacon-readiness.sh: |
    #!/bin/bash

    SYNCING=$(curl -sf http://localhost:3500/eth/v1/node/syncing) || exit 1
    IS_SYNCING=$(echo "$SYNCING" | jq -r '.data.is_syncing')

    if [[ $IS_SYNCING == false ]]; then
      echo "daemon-beacon is synced"
      exit 0
    fi

    echo "daemon-beacon is still syncing"
    exit 1
  evm.sh: |
    {{- include "unchained.evm" . | nindent 4}}
  indexer-readiness.sh: |
    {{- include "unchained.indexerReadiness" . | nindent 4}}