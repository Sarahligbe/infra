# Default values for directory.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

arkeoApi: arkeo:1317
arkeoDaemon:
  mainnet: arkeo:27147
  testnet: arkeo:26657
  stagenet: arkeo:27147

net: mainnet

replicaCount: 1

logLevel: info

image:
  repository: ghcr.io/arkeonetwork/arkeo
  tag: latest
  pullPolicy: IfNotPresent

postgres:
  host: postgresql
  name: arkeo
  user: arkeo
  password: password
  port: 5432
  poolMaxConns: 2
  poolMinConns: 1
  sslMode: prefer

postgresql:
  postgresqlDatabase: arkeo
  postgresqlUsername: arkeo
  postgresqlPassword: password

service1:
  name: directory-api
  port: 7777
  command: api
  additionalEnv:
    API_LISTEN: "0.0.0.0:7777"
    API_STATIC_DIR: "/var/www/html"

service2:
  name: directory-indexer
  command: indexer
  additionalEnv:
    CHAIN_ID: "arkeo"
    BECH32_PREF_ACC_ADDR: "arkeo"
    BECH32_PREF_ACC_PUB: "tarkeopub"
    ARKEO_API: "http://arkeo:1317"
    TENDERMINT_API: "http://arkeo:26657"
    TENDERMINT_WS: "tcp://arkeo:26657"

service:
  type: ClusterIP
  port: 7777

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

persistence:
  enabled: true
  size:
    testnet: 50Gi
    stagenet: 100Gi
    mainnet: 200Gi
  accessMode: ReadWriteOnce
  # storageClass: "-"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  service1:
    requests:
      cpu: 0.5
      memory: 512Mi
    # limits:
    # cpu: 0.5
    # memory: 512Mi
  service2:
    requests:
      cpu: 0.5
      memory: 512Mi
    # limits:
    # cpu: 0.5
    # memory: 512Mi
  postgres:
    requests:
      cpu: 2
      memory: 3Gi
    # limits:
    # cpu: 2
    # memory: 3Gi

nodeSelector: {}

tolerations: []

affinity: {}

global:
  images:
    busybox:
      tag: latest
      hash: caa382c432891547782ce7140fb3b7304613d3b0438834dce1cad68896ab110a
